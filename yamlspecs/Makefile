# Copyright (c) 2000 - 2019 The Regents of the University of California.
# All rights reserved.	
# This includes the Generic yaml2rpm Makefile - most packaging should
# be able to use this.

include $(YAML2RPM_HOME)/sys/Makefile

SHELL = /bin/bash
PERLVER = $(shell $(GENERATE) --query=version perl.yaml)
MODBASELINE = $(shell cat baseline/modules.baseline)

# specific to modules that have autogenerated yaml files
AUTOYAML = $(shell cat buildorder)
DRPMS = $(subst auto,perl_$(PERLVER),$(AUTOYAML))

# specific to bioperl modules
BIO = $(shell cat bioperl/buildorder)
BIORPMS = $(addprefix perl_$(PERLVER)-,$(BIO))

.PHONY: buildall

all: prep 

MyConfig.pm: MyConfig.pm.in
	sed 's%/root/%$(PWD)/%g' MyConfig.pm.in > MyConfig.pm

README.baseline: README.baseline.in
	sed 's/@VERSION@/$(PERLVER)/' $^ > $@

modules.bootstrap:
	cat $@.base baseline/modules.baseline > $@
	
prep: MyConfig.pm README.baseline modules.bootstrap
	for name in $(MODBASELINE) perl-baseline ; do \
	    cp baseline/$$name.yaml . ; \
	done

prepclean:
	-/bin/rm README.baseline MyConfig.pm modules.bootstrap
	for name in $(MODBASELINE) perl-baseline ; do \
	    /bin/rm -f $$name.yaml ; \
	done

prepdownload:
	for name in perl $(MODBASELINE); do \
	    make download PKG=$$name; \
	done

### all bio* targets are for BioPerl related modules

bio: biobuildorder desired-build

biobuildorder:
	/bin/cp bioperl/buildorder .
	/bin/cp bioperl/*yaml .

bioclean:
	for name in $(shell cat bioperl/buildorder); do \
	    /bin/rm  $$name.yaml; \
	done
	/bin/rm -f buildorder

bio-erase: bioclean
	yum -y erase $(BIORPMS)
	( for name in $(BIORPMS); do			\
	  	rm -rf ../RPMS/x86_64/$$name-[0-9]* ;	\
	  done						\
	)
	/bin/rm -f buildorder

###  for creating desired modules yamls
desired-yaml: desired
	module load perl
	python depend.py desired

desired-download:
	for name in $(AUTOYAML); do \
	    distro=$$($(GENERATE) --query=tarball $$name.yaml);	\
	    if [ ! -f ../sources/$$distro ]; then 		\
	        make download PKG=$$name; 			\
	    fi;							\
	done

desired-build: desired-download
	for name in $(AUTOYAML); do					\
	    make -e -f $(THISMAKE) $$name.pkg;			\
	    make -e -C $(LOCALREPODIR) createlocalrepo; 		\
	    rpmname=$$($(GENERATE) --query=pkgname $$name.yaml);	\
	    yum -y -c $(LOCALREPODIR)/yum.conf install $$rpmname;	\
	done								\

desired-erase:
	echo $(DRPM)
	yum -y erase $(DRPMS)
	( for name in $(DRPMS); do			\
	  	rm -rf ../RPMS/x86_64/$$name-[0-9]* ;	\
	  done						\
	)
	/bin/rm buildorder

### this target creates provides/requirtes filters for each module yaml

addfilters:
	if [ -f add-filters.sh ]; then \
		/bin/bash add-filters.sh $(thismod) $(TMPBUILD) "$(GENERATE)"; \
	else \
		echo; \
	fi

#NAMES = $(subst auto-,,$(BIO))
#temp:
#	for name in $(NAMES); do \
#	    mv bioperl/auto-$$name.yaml bioperl/$$name.yaml ; \
#	done
# common and module specific filters
#FILTERSIN=$(shell ls filter*.in)
#FILTERS = $(FILTERSIN:.in=)
